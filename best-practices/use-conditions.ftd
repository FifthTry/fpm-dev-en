-- ds.page: How to use Conditions

By following the best practices for writing conditional statements, developers
can create code that is less error-prone and more efficient, making it easier
for other developers to work with the code and reducing the likelihood of
introducing bugs.

Following are the best-practices on how to use conditions:


-- utils.code-display: Default Values for Mutually Exclusive Statements
id: default-values-mutually-exclusive-statements

For the two mutually exclusive statements, only one condition is required.
For the other statement, use default value.

-- ds.code: Not recommended
lang: ftd

\-- ftd.text: Hello
color if { flag }: red
color if { !flag }: green


-- ds.code: Recommended
lang: ftd

\-- ftd.text: Hello
color if { flag }: red
color: green

-- end: utils.code-display








-- utils.code-display: Avoid redundancy with Conditions
id: redundant-conditional-statements

Avoid Unnecessary Conditional Statements for `always true` or `always false`
statements.

A programming best practice where unnecessary conditional statements for
expressions that are always true or always false are avoided as it only results
in redundant code.


-- ds.code: Not recommended
lang: ftd

\-- integer num: 1

\-- ftd.integer: $num
if: { num == 1 }

\-- ftd.text: World
if: { num == 2 }

-- ds.code: Recommended
lang: ftd

\-- integer num: 1

\-- ftd.integer: $num

-- end: utils.code-display






-- ds.h1: Conditions with respect to Parent and Child

-- utils.code-display: Avoiding same conditions on element and it's ancestor
id: avoiding-same-conditions-on-parent-and-children-sections

When creating same conditions on parent and children sections, it is not
recommended to give the same condition of the parent section to the children
sections. This approach adds an unnecessary line of code and can make the FTD
code more difficult to read and maintain.

Instead, the recommended approach is to include the condition only on the 
parent section, and then include any necessary child sections within that
parent section

-- ds.code: Not recommended
lang: ftd

\-- ftd.column:
if: { flag } ;; <hl>

\-- ftd.text: Hello
if: { flag } ;; <hl>

\-- ftd.text: World
color if { flag }: green ;; <hl>

\-- end: ftd.column

-- ds.code: Recommended
lang: ftd

\-- ftd.column:
if: { flag } ;; <hl>

\-- ftd.text: Hello

\-- ftd.text: World
color: green ;; <hl>

\-- end: ftd.column

-- end: utils.code-display









-- utils.code-display: Avoiding mutually exclusive conditions on element and it's ancestor


It's unnecessary to add mutually exclusive conditions to children sections, as they will never be true. This only adds complexity to the code. 

It's recommended to apply mutually exclusive conditions only to the parent
section and include child sections within it. This approach simplifies the
code, makes it easier to read, and reduces the risk of errors.

-- ds.code: Not recommended
lang: ftd

\-- ftd.column:
if: { flag } ;; <hl>

\-- ftd.text: Hello
if: { !flag } ;; <hl>

\-- ftd.text: World
color if { !flag }: green ;; <hl>

\-- end: ftd.column


-- ds.code: Recommended
lang: ftd

\-- ftd.column:
if: { flag } ;; <hl>

\-- ftd.text: World

\-- end: ftd.column

-- end: utils.code-display


-- end: ds.page
