-- ds.page: Auto Nesting

-- ds.markdown: 

FTD has a feature that takes a structure like this:


-- ds.code:
lang: ftd

\-- ds.h1: hello

this is a para

\-- ds.h2: first inner heading

\-- ds.h3: first grand inner heading

\-- ds.h3: second grand inner heading

\-- ds.h2: second inner heading

\-- ds.code:
lang: py

hello()


-- ds.markdown:

And auto-nests them to create a structure like this:


-- ds.code:
lang: txt

- h1
  - para
  - h2
    - h3
    - h3
  - h2
    - code


-- ds.markdown:

In [Common](common/) we have an attribute: `region`, eg `ds.h1` has 
region set to `Some(Region::H1)`, we use the heading region to auto nest.

In the source we wrote `h1`, `h2` as if they were siblings, but by we everything
that comes after an `h1` inside the `h1`, till the next `h1` or the end of children
at current level.


-- ds.h1: Motivation For This Feature

When we create long documents, we want to be able to expand-collapse by heading.
With proper auto nesting, we can implement a toggle behaviour which will leave
only the heading open and hide the content.

We can also assign an `id` to a heading, and then we can include the entire heading
subtree rooted at that `id` into another document.

Note: both of these are not yet possible, and need some more development, we have
only implemented one piece of infra yet.

-- end: ds.page