-- import: fifthtry.github.io/admonitions as cbox

-- ds.page: Basics of `http` processor and `data modelling`

In this part, we will delve into concepts like the `http` processor
and `data modelling` using a simple example.

To facilitate your learning journey, we will take a pratical scenario involving 
an array of records. Each record has two key attributes: the **country-name** 
and it's corresponding **capital**, in the form of JSON data.

-- ftd.text: Click to see the JSON data
link: https://famous-loincloth-ox.cyclic.app/
open-in-new-tab: true

-- ds.markdown:

By the end of this part, you will have gained insights into how REST APIs can 
seemlessly connect the backend with the frontend.

The first step is to create a `fastn package`.

-- cbox.info: What is `fastn` package?

`fastn` package is a folder that requires atleast two files

- FASTN.ftd
- index.ftd

-- ds.h2: http processor

`http` processor does the network communication using REST API and fetches data
from the external site in a different domain.

The syntax of using `http` processor is as follows:

-- ds.code:

\$processor$: pr.http


-- ds.h2: Data modelling: `record`

For this example, we will use `record` feature of `fastn`'s.
`record` can be used to create a user defined data type. 

Here we are creating a new record called `country-data`.

-- ds.code: Declaring a country record

\-- record country-data:
string name:
string capital:

-- ds.h2: Start building

Let's implement the theory and build the project. 

-- ds.h3: **Step 1:** Import `fastn` processor

Copy the import line and paste it at the top of the `index.ftd` document

-- ds.code: Import Processors

\-- import: fastn/processors as pr


-- ds.h3: **Step 2:** Declare a `record` 

Before a record can be used it must be declared


-- ds.code: Declaring `country-data` record

\-- record country-data:
string name:
string capital:


-- ds.h3: **Step 3:** Create a list

Since the JSON data has a list of countries and their respective captials, 
therefore, we will create a list and use the `country-data` record as the type.

-- ds.code: list countries of country type

\-- country-data list countries:


-- ds.markdown:

This list will be created when we do the `http` calling with the `http`
processor. Also, we will provide the endpoint i.e. the address where the data
is present as the `url`.

-- ds.code: 

\-- country-data list countries:
$processor$: pr.http
url: https://famous-loincloth-ox.cyclic.app/



-- ds.h3: **Step 4:** Create a component definition


-- ds.code: Create component `country-detail`

\-- component country-detail:


\-- end: country-detail


-- ds.markdown: 

Create a header property `country` of type **country-data** as caption

-- ds.code:

\-- component country-detail:
caption country-data country:  ;; <hl>

\-- end: country-detail

-- ds.markdown:

Let's first pull the data of country and display in the browser

-- ds.code:

\-- component country-detail:
caption country-data country:  

\-- ftd.text: $country-detail.country.name  ;; <hl>

\-- end: country-detail




-- ds.markdown:

Till now, we have just defined the component but to display the list of country
names we need call the component. Therefore, after closing the component we 
can call the component and create a `for` loop. 


-- ds.code:

\-- country-detail: $country
for: $country in $countries

-- ds.markdown:

Now wrap the two texts for country-name and capital in `row` container

-- ds.code: 

\-- ftd.row:
width.fixed.percent: 20

\-- ftd.text: $country-detail.country.name

\-- ftd.text: $country-detail.country.capital

\-- end: ftd.row

-- ds.markdown:

So you have successfully fetched and displayed the values of JSON data from the
external website using the `http` processor and one of the data modelling type, 
`record`.

-- ds.h3: Improved UI

You can use various CSS properties to improve the UI to display the data, let's 
say in the form of a table.

-- ds.code: css properties added

\-- import: fastn/processors as pr

\-- ftd.column:
width: fill-container
padding.px: 40
align-content: center

\-- ftd.row:
width.fixed.percent: 30

\-- ftd.text: Country
role: $inherited.types.copy-regular
style: bold
border-bottom-width.px: 1
width.fixed.percent: 40
border-width.px: 1
border-style-horizontal: dashed
padding-left.px: 10
background.solid: $inherited.colors.background.base

\-- ftd.text: Capital
role: $inherited.types.copy-regular
style: bold
padding-left.px: 10
border-bottom-width.px: 1
width.fixed.percent: 40
border-width.px: 1
border-style-horizontal: dashed
background.solid: $inherited.colors.background.base

\-- end: ftd.row


\-- country-detail: $country
for: $country in $countries

\-- end: ftd.column

\-- record country-data:
string name:
string capital:

\-- country-data list countries:
$processor$: pr.http
url: https://famous-loincloth-ox.cyclic.app/

\-- component country-detail:
caption country-data country:


\-- ftd.row:
width.fixed.percent: 30

\-- ftd.text: $country-detail.country.name
role: $inherited.types.copy-regular
width.fixed.percent: 40
border-width.px: 1
border-style-horizontal: dashed
padding-left.px: 10

\-- ftd.text: $country-detail.country.capital
role: $inherited.types.copy-regular
padding-left.px: 10
width.fixed.percent: 40
border-width.px: 1
border-style-horizontal: dashed

\-- end: ftd.row

\-- end: country-detail



-- end: ds.page
