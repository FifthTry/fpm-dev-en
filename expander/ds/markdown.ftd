-- import: fastn/processors as pr
-- import: fastn.com/expander/lib

-- my-ds.page: markdown in `doc-site`

-- ds.markdown:
if: { !show-planning }

In this video we will see how to use markdown in `doc-site`.

/-- ds.youtube:
if: { !show-planning }
v: 

-- lib.video-audience: How to use markdown in `doc-site`
if: { show-planning }
owner: Ajit
aud: Website Builders

Gives the idea about the markdown syntax allowed in `fastn`

-- ds.h1: Straight to the point
if: { show-planning }

`fastn` supports `Markdown`. Hence, instead of learning tags, one can still
create content-heavy and powerful website using plain text without missing out 
on formatting. 

Supporting `Markdown` makes `fastn` versatile as it also supports the
conversion of the marked-up text into various output formats such as HTML.

By importing the `doc-site` package in your fastn projects and using
any of the component like `ds.markdown` component, you gain access to 
Markdown's intuitive and readable text formatting syntax. 

Let's see what all we can do using this component of `doc-site`.

-- ds.h1: Introduction
if: { !show-planning }

`fastn` supports the `Markdown`. Hence, instead of learning tags, one can still
create content-heavy and powerful website using plain text without missing out 
on formatting. 

Supporting `Markdown` makes `fastn` versatile as it also supports the
conversion of the marked-up text into various output formats such as HTML.

By importing the `doc-site` package in your fastn projects and using
any of the component like `ds.markdown` component, you gain access to 
Markdown's intuitive and readable text formatting syntax. 



-- ds.h1: Introduction
if: { show-planning }

Welcome!! My name is Ajit

In this video we will see what all we can do with the markdown.

-- ds.image:
if: { show-planning }
src: $fastn-assets.files.expander.ds.img.makrdown-intro.png

-- ds.h1: Markdown

`Markdown` is a way to write the content for the web. 

Markdown provides a way to style text elements such as headings, lists, links,
and more, using plain text and minimal special characters.



-- ds.h2: Benefits

- Markdown's simplicity, readibility, and portability as plain texts can be 
easily shared and opened on any platform. Hence, using it in `doc-site` makes 
it a valuable tool for content creators and developers alike.

- Markdown is widely used in blogging, instant messaging, online forums,
  collaborative software, documentation pages, and readme files.

- **Rich Styling**:  It gives rich styling to the text.

-- ds.image:
if: { show-planning }
src: $fastn-assets.files.expander.ds.img.markdown-benefits.png

-- ds.h1: Markdown syntax in doc-site
$on-global-key[alt-p]$: $ftd.toggle($a = $show-planning)

To use the *Markdown Syntax* in your fastn projects using components of 
`doc-site`. The first thing is to add doc-site in your package.

-- ds.code: Dependency
lang: ftd

\-- fastn.dependency: fastn-community.github.io/doc-site

-- ds.code: Importing doc-site
lang: ftd

\-- import: fastn-community.github.io/doc-site as ds

-- ds.code: Syntax
lang: ftd

\-- ds.markdown: 



-- ds.rendered: Plain text

-- ds.rendered.input:

\-- ds.markdown:

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
tempor incididunt.

-- ds.rendered.output:

-- ds.markdown:

Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod 
tempor incididunt.

-- end: ds.rendered.output

-- end: ds.rendered




-- ds.rendered: Inline styles

-- ds.rendered.input:

\-- ds.markdown:

**Bold Text** dolor sit amet, *Italic text* elit, sed do eiusmod tempor
  incididunt.

-- ds.rendered.output:

-- ds.markdown:

**Bold Text** dolor sit amet, *Italic text* elit, sed do eiusmod tempor
  incididunt.

-- end: ds.rendered.output

-- end: ds.rendered





-- ds.rendered: Inline links

-- ds.rendered.input:

\-- ds.markdown:

Lorem ipsum [inline link](/docs/markup-support/) amet, consectetur adipiscing
elit, sed do eiusmod tempor incididunt.

-- ds.rendered.output:

-- ds.markdown:

Lorem ipsum [inline link](/docs/markup-support/) amet, consectetur adipiscing
elit, sed do eiusmod tempor incididunt, [fastn](/) .

-- end: ds.rendered.output

-- end: ds.rendered





-- ds.rendered: Turning a URL into a link

-- ds.rendered.input:

\-- ds.markdown:

https://fastn.com/

-- ds.rendered.output:

-- ds.markdown:

https://fastn.com/

-- end: ds.rendered.output

-- end: ds.rendered









-- ds.rendered: Markdown List

-- ds.rendered.input:

\-- ds.markdown:

**Bullet list:**

- List item 1
- List item 2
- List item 3
  - Sub List item 1
  - Sub List item 1

**Ordered list:**

1. List item 
2. List item 
3. List item
   1. Sub List Item
   2. Sub List Item
   3. Sub List Item

-- ds.rendered.output:

-- ds.markdown:

**Bullet list:**

- List item 1
- List item 2
- List item 3
  - Sub List item 1
  - Sub List item 1

**Ordered list:**

1. List item 
2. List item 
3. List item
   1. Sub List Item
   2. Sub List Item
   3. Sub List Item

-- end: ds.rendered.output

-- end: ds.rendered




-- ds.rendered: Strikethrough

-- ds.rendered.input:

\-- ds.markdown:

~~The world is flat.~~

-- ds.rendered.output:

-- ds.markdown:

~~The world is flat.~~

-- end: ds.rendered.output

-- end: ds.rendered




-- ds.rendered: Superscript

-- ds.rendered.input:

\-- ds.markdown:

X^2^

-- ds.rendered.output:

-- ds.markdown:

X^2^

-- end: ds.rendered.output

-- end: ds.rendered


-- ds.rendered: Horizontal Rule

-- ds.rendered.input:

\-- ds.markdown:

To create a Horizontal Rule we write

***

-- ds.rendered.output:

-- ds.markdown:

To create a Horizontal Rule we write

***


-- end: ds.rendered.output

-- end: ds.rendered


-- ds.h1: Closing Remarks 
if: { show-planning }

Thank you guys, keep watching these videos to learn more about fastn. Checkout
the `fastn` website. 

Support us by clicking on this link and give us a star ⭐ on GitHub and join 
our fastn community on Discord.


-- ds.markdown: 
if: { !show-planning }

Thank you guys, keep watching these videos to learn more about fastn. 

Support us by giving a star ⭐ on 
[GitHub](https://github.com/fastn-stack/fastn/) and join our fastn community 
on [Discord](/discord/).


-- ds.h1: Final Video
if: { show-planning }

/-- ds.youtube:
if: { show-planning }
v: 


-- end: my-ds.page


-- boolean $show-planning: false
$processor$: pr.get-data
key: show-planning
