-- import: fastn/processors as pr
-- import: fastn.com/expander/lib

-- my-ds.page: Creating a page

-- ds.markdown:
if: { !show-planning }

In this video we will learn how to create a page.

/-- ds.youtube:
if: { !show-planning }
v: 

-- lib.video-audience: How to create a page
if: { show-planning }
owner: Ajit
aud: Website Builders

To explain what all can be done using page component.


-- ds.h1: Introduction
if: { show-planning }

The `page` component of the package `doc-site` allows to build an entire 
web-page that wraps other components in it as it is a container component.

This component can be used to create not just a standalone webpage but entire 
website with various pages that may give a common theme to the website by 
applying a color-scheme, typography, site name, site-logo etc.

Whatever passed in the caption of this component becomes the title of the page. 
This component has properties that can be used to customize how the page 
should look.

It also allows SEO stuff by allowing the user to add meta-data for website 
optimization by using some properties. 
There is a separate video dedicated to this, you can checkout out, the link is 
in the description.


-- ds.h1: Introduction
if: { !show-planning }

The `page` component of the package `doc-site` is a container component that 
allows a user to build an entire web-page that wraps other components in it. 

-- ds.code: Page component
lang: ftd

\-- ds.page:

\;; content goes here

\-- end: ds.page

-- ds.markdown:

This component can be used to create not just a standalone webpage but entire 
website with various pages that may give a common theme to the website by 
applying a color-scheme, typography, site name, site-logo etc.

Whatever passed in the caption of this component becomes the page title as 
well as document title. But, by using some of it's properties we can customize 
the document title to be different than page title. Therefore, it also allows 
SEO stuff by adding meta-data. Checkout
[How to add meta-data for website optimization](/seo-meta/).


-- ds.h1: Intro Slide
if: { show-planning }

Welcome!! My name is Ajit

In this video we learn everything we can do using page component of the 
`doc-site` package.


-- ds.h1: Creating a standalone page
$on-global-key[alt-p]$: $ftd.toggle($a = $show-planning)

Creating a standalone page or a complete website, to use this package, we 
need to add the doc-site package in your fastn project.

To add the doc-site package, if you don't know it already, there are only two 
things that is needed to be done.

**A:** Add it as dependency in `FASTN.ftd` document.

**B:** Import it in the file or files you want to use.

-- ds.code: Add as dependency
lang: ftd

\-- fastn.dependency: fastn-community.github.io/doc-site

-- ds.markdown:

Then, import the `doc-site` package in your documents like `index.ftd`

-- ds.code: Importing doc-site
lang: ftd

\-- import: fastn-community.github.io/doc-site as ds

-- ds.markdown:

If there is one document, we can directly use `ds.page` and use the properties 
we need to create that page.  

-- ds.code: Syntax
lang: ftd

\-- ds.page: You meet me first because I am ~in~ en'titled ü§¥

Hello I am the body area üñê. 

And I am the second paragraph üôÜ‚Äç‚ôÇÔ∏è. At vero eos et accusamus et iusto odio 
dignissimos ducimus qui blanditiis molestias excepturi sint occaecati 
cupiditate non provident.

Sed ut perspiciatis sunt explicabo.

\-- ds.h1: Tallest in my family 

This is heading level 1 optional body content.

\-- ds.h2: Damn! I just missed by few pixels

This is heading level 2 optional body content.

\-- ds.h3: I get bullied by the above two

This is heading level 3 optional body content.

\-- ds.markdown:

I don't brag about myself but I am the convient one üòé.


\-- end: ds.page


-- ds.h1: Customized Page Component

Now imagine, you have a dozen of such documents in your package. 

On top of it, imagine displaying your distinctive site-logo and site-name 
across the website, creating a unified visual identity that resonates with 
your brand.

It would be a tedious job applying the same properties to all the documents.
Also, in the future, if you change one or more values of the properties, then 
we would need to manually update it on all the pages.

To maintain a consistent brand image across the pages throughout the website,
and make it easy to update with a single change, we can create a custom page
component. This component can include the site logo, site name, color scheme,
typography, etc, sparing us the need to tediously apply them individually to
each and every page.


To do the same, we will move the component definition in a separate document, 
let's call it `my-ds.ftd`.



-- ds.code: my-ds
lang: ftd

\-- component page:
children wrapper:
optional caption title:
optional body body:

\-- ds.page: $page.title
body: $page.body
site-name: Ocean
site-logo: $assets.files.images.anchor.svg
site-url: https://fastn.com/

\-- end: ds.page

\-- end: page


-- ds.markdown:

And we can also auto-import the doc-site package as well as this document as 
we will be using these two in all the pages. 


-- ds.code: my-ds
lang: ftd

\-- fastn.auto-import: fastn-community.github.io/doc-site as ds
\-- fastn.auto-import: <package-name>/my-ds as my-ds






;; =================== 
;; Code block Template
;; ===================


/-- ds.code: Syntax
lang: ftd




;; ============== 
;; Image Template
;; ==============

/-- ds.image:
if: { show-planning }
src: $fastn-assets.files.expander.ds.img.



;; =================  
;; Rendered Template
;; =================


/-- ds.rendered: 

/-- ds.rendered.input:


/-- ds.rendered.output:


/-- end: ds.rendered.output

/-- end: ds.rendered





/-- ds.markdown:

Hence using `page` component can offer a lot of things.


-- ds.h1: Closing Remarks 
if: { show-planning }

Thank you guys, keep watching these videos to learn more about fastn. Checkout
the `fastn` website. 

Support us by clicking on this link and give us a star ‚≠ê on GitHub and join 
our fastn community on Discord.


-- ds.markdown: 
if: { !show-planning }

Thank you guys, keep watching these videos to learn more about fastn. 

Support us by giving a star ‚≠ê on 
[GitHub](https://github.com/fastn-stack/fastn/) and join our fastn community 
on [Discord](/discord/).


/-- ds.h1: Final Video
if: { show-planning }

/-- ds.youtube:
if: { show-planning }
v: 


-- end: my-ds.page


-- boolean $show-planning: false
$processor$: pr.get-data
key: show-planning
