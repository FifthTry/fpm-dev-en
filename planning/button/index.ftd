-- my-ds.page: Button using `fastn` ðŸš§

Video Title: How to create a button using `fastn`

Owner: Ajit

Audience: Frontend developer, designer

Goal: To help users to create button using `fastn`

Assumption: Have already installed `fastn` and create a fastn package.
Understanding of datatypes, components.


-- ds.h1: Part 1 - Create Button

In this part we will create simple UI for button.

-- ds.h2: Intro Clip

**Screen**: Introduction slide

**Script**

Hey Guys, Welcome to the video where we are going to create a button using
`fastn`. 

First, will learn how to create a button with basic UI then we will try to
recreate this button UI in later stages of this video.



To make the button we will use the concept of [components](https://fastn.com/components). 
The link is in the description box.

We will define various properties to the component. 

Also, we will do some event handling that gives the shadow to the button
on-hover.


-- ds.image:
src: $fastn-assets.files.planning.button.button-shadow.png

-- ds.h2: button.ftd file

**Basic UI**

Script

Let's start by creating a `component` called `button`.
The syntax is:

-- ds.code:
lang: ftd

\-- component button:

\-- end: button

-- ds.markdown:


We will give the basic properties to this component like, `title` and `link`.
`title` will be of `caption` type. 
`link` is of `string` type.

You can also make the link as `optional`, if you do not want to add any link to
it.

-- ds.code:
lang: ftd


\-- component button:
caption title:
optional string link: 

\-- end: button


First, let's create a button.

Inside this component we will add `ftd.text` that will take the title and other
properties.

-- ds.code:
lang: ftd

\-- ftd.text: $button.title
link: $button.link
border-width.px: 2


-- ds.markdown:

We have a basic button ready.

Now let's give some styling properties 

So, in the component definition we will add:

-- ds.code:
lang: ftd

\-- component button:
caption title:
optional string link: 
ftd.responsive-type role: $inherited.types.copy-regular ;; <hl>
ftd.color text-color: $inherited.colors.text-strong 	;; <hl>


\-- end: button


In the `ftd.text`, we will use these component properties.

-- ds.code:
lang: ftd

\-- ftd.text: $button.title
link: $button.link
border-width.px: 2
role: $button.role 			;; <hl>
color: $button.text-color 	;; <hl>
style: bold 				;; <hl>





-- ds.h2: Done

There you go, we have created a button. You have choice to go and create your
own amazing UIs over this button or if you want to re-create the button I am
creating, you can watch the next video. 




-- ds.h1: Part 2 - Polishing UI

In this part we will polish the UI to re-create the button.

-- ds.h2: Intro Clip

Screen: Introduction slide

Welcome back, let's jump straight into adding properties and create variables
to polish the UI.

We will use the concepts of <so and so>


-- ds.h2: Done

So we have polished the UI. I hope you have learnt with me and found this video
easy to follow. You can share your feedbacks if you wish to.

We would love to see your package. Checkout our "show-and-tell"
channel on Discord where you can share with us your own UIs and I can also
create a video to show who has created what.


-- end: my-ds.page
