-- import: fastn.com/blog/authors
-- import: fastn-community.github.io/doc-site/common
-- import: fastn.com/content-library/compare as cl

-- common.post-meta meta: Create `-- content-library.ftd` for recurring content components 
published-on: November 25, 2023
post-url: /blog/content-library/
author: $authors.nandini

Let's say you're developing a landing page for a specific campaign. Instead of recreating 
the page from scratch, you can reference the content components from a centralized repository.


-- ds.blog-page: 
meta: $meta

-- ds.h1: Understanding the `-- content-library.ftd` Approach

At its core, the --content-library.ftd is a file that houses content components. These components encompass various elements such as 
titles, descriptions, banners, testimonials, CTAs, or any other marketing content 
pieces that are recurrently used across landing pages. They can be easily referenced and 
reused across various landing pages, streamlining the process of webpage creation and ensuring content 
consistency without duplicating efforts.

For instance, consider a Call-to-Action component:

-- ds.code:
lang: ftd 

\-- component get-started:

\-- utils.install: Get Started with fastn
code-lang: sh
code: curl -fsSL https://fastn.com/install.sh | bash
cta-text: Learn More
cta-link: /install/

Install fastn with a Single Command

\-- end: get-started

-- cl.get-started:

-- end: get-started

-- ds.markdown:

Here is another example:

Check out this [web page](https://fastn.com/react/) and its code. 


-- ds.code:
lang: ftd 

\-- import: fastn.com/content-library/compare as cl ;; <hl>


\-- ds.page-with-get-started-and-no-right-sidebar: fastn vs React, Angular and Javascript

fastn is a no-fuss alternative to the complexities of React, Angular, and 
JavaScript. Here is a quick glance.


\-- cl.very-easy-syntax:

\-- cl.readymade-components:

\-- cl.fullstack-framework:

\-- cl.design-system:

\-- cl.seo:

\-- cl.visualize-with-vercel:

\-- cl.fastn-best-choice-for-startup:


\-- end: ds.page-with-get-started-and-no-right-sidebar


-- ds.markdown: 

Notice how clean and straightforward the code of this page appears. 
By outlining each component utilized on this page separately within the 
"-- content-library.ftd" file, generating new landing pages becomes effortless.

-- ds.h1: Advantages of `-- content-library.ftd" 

-- ds.h2: Avoiding Duplication and Maintaining Consistency

By employing '-- content-library`, redundancy and repetition are minimized. 
Any updates or changes made to the original content components in the `-- content-library.ftd` 
\automatically reflect across all landing pages that reference them. This not only saves time 
but also ensures consistency in branding and messaging.

-- ds.h2: Efficiency in Launching New Landing Pages

Developing new landing pages becomes more straightforward. 
Instead of starting each page's content creation from scratch, developers 
can simply assemble various content components from the `-- content-library.ftd`, allowing 
faster turnaround times for launching new campaigns or pages.

Read about [domain-driven documentation](/blog/domain-components/), another valuable technique for swift webpage 
creation. 

-- ds.h3: Related Links

Master [web development](https://fastn.com/learn/) with fastn

Read other [blogs](https://fastn.com/blog/)

Read [docs](https://fastn.com/ftd/data-modelling/)








-- end: ds.blog-page