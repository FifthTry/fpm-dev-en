-- ft.page: `fpm resolve-conflict <file-name>`

This command is used to resolve the [conflict](sync-conflict/) in the file
introduced by attempt, done by the [client](glossary/#client-project), to
sync a file having different latest [version](glossary/#version) in the
[server](glossary/#server-project) and has failed in three way merge.

On successful execution of this command, the file gets out of conflict state and
gets ready to be synced.

To understand sync better, read [`How Sync Works`](dev/sync/).

According to the [types of conflict](sync-conflict/#types-of-fpm-sync-conflicts),
this command accepts different flag.


-- ft.h1: `fpm resolve-conflict <file-name>`

This command works in case of [`edit-edit-conflict`](sync-conflict/#edit-edit-conflict).

It opens a default editor with conflict marker, `ours` and `theirs`. The `ours`
marker contains the current changes and `theirs` marker contains the server
changes. After doing the required changes and saving it will resolve the conflict.
It also updates the file with the changes done in the editor.

This file is now ready to be synced. The probable status of this file is
[Updated](cli/sync-status/#Updated). It can be verified by using
[`fpm sync-status`](cli/sync-status/) command.


-- ft.h1: `fpm resolve-conflict --use-ours <file-name>`

This command works in case of [`edit-edit-conflict`](sync-conflict/#edit-edit-conflict)
and [`add-add-conflict`](sync-conflict/#add-add-conflict).

Sometimes, there's a need to keep the current/local changes of the file,
discarding the changes from the server version. In such case, this command is
helpful.

It keeps the current content of the file and gets the file out of
[conflict-state](glossary/#conflict-state)


-- ft.h1: `fpm resolve-conflict --use-theirs <file-name>`

This command works in case of [`edit-edit-conflict`](sync-conflict/#edit-edit-conflict)
and [`add-add-conflict`](sync-conflict/#add-add-conflict).

This command accomplishes the opposite of `--use-ours` flag discussed above.
It discards the current/local changes and keep the changes present in server
version. It, then, gets the file out of
[conflict-state](glossary/#conflict-state).


-- ft.h1: `fpm resolve-conflict --delete-it <file-name>`

This command works in case of [`edit-delete-conflict`](sync-conflict/#edit-delete-conflict)
and [`delete-edit-conflict`](sync-conflict/#delete-edit-conflict).

It deletes the file, discarding changes from server version, in case of
[`edit-delete-conflict`](sync-conflict/#edit-delete-conflict), or current
changes, in case of [`delete-edit-conflict`](sync-conflict/#delete-edit-conflict)
and gets the file out of [conflict-state](glossary/#conflict-state)


-- ft.h1: `fpm resolve-conflict --revive-it <file-name>`

This command works in case of [`edit-delete-conflict`](sync-conflict/#edit-delete-conflict)
and [`delete-edit-conflict`](sync-conflict/#delete-edit-conflict).

It keeps the changes of the file from server version, in case of
[`edit-delete-conflict`](sync-conflict/#edit-delete-conflict), or from current
changes, in case of [`delete-edit-conflict`](sync-conflict/#delete-edit-conflict)
and gets the file out of [conflict-state](glossary/#conflict-state)




