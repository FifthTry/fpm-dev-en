-- import: ft
-- import: config

-- ft.page:

-- ft.content:

-- ft.markdown:

{ft.highlight: FTD: Programming Language For Prose}

FTD is an open source programming language for writing prose.

-- ft.code:
lang: ftd

\-- import: lib

\-- lib.h1: Hello World

-- ft.markdown:

Here is a FTD document that is importing a library, `lib`, and has a heading of
level 1, "Hello World". FTD language is designed for human beings, not just
programmers, we have taken precautions like not requiring quoting for strings,
not relying on indentation nor on braces that most programming languages require.
It is not verbose like HTML, and not simplistic like Markdown.

FTD can be compared with Markdown, but in FTD you can do the following for
example:




-- ftd.grid:
boolean current: false
width: fill
slots: left right
slot-widths: 70% auto

--- ft.code:
lang: ftd
slot: left

\-- ftd.text: Hello World
boolean current: false
$event-click$: toggle $current
color if $current: red
color: white
background-color: black
padding: 20

--- ftd.text: Hello World
align: center
slot: right
$event-click$: toggle $current
padding: 20
color if $current: red
color: white
background-color: black



-- ft.markdown:

We can define variables in FTD. FTD is strongly typed. We can do event handling.
Since we are targetting "human beings" we have created a lot of "actions" that
we believe one will be invoking on a day to day basis, like `toggle`, which can
be used to create simple event handling.

You can also abstract out the logic in a custom ftd component, eg:

-- ftd.grid:
width: fill
slots: l r
slot-widths: 70% auto

--- ft.code:
lang: ftd
slot: l

\-- ftd.text toggle-text: $title
boolean current: false
caption title:
$event-click$: toggle $current
color if $current: red
color: white
background-color: black
padding: 20

\-- toggle-text: Components are cool!

--- toggle-text: Components are cool!
slot: r

-- ftd.text toggle-text: $title
boolean current: false
caption title:
align: center
$event-click$: toggle $current
color if $current: red
color: white
background-color: black
padding: 20


-- ft.markdown:

Here we have created a new component called `toggle-text`, and then instantiated
it instead. This way we can create custom component library and use them in our
writing without "polluting" the prose with noise.

FTD is also a good first class data language. You can define and use records:

-- ft.code:
lang: ftd

\-- record person:
caption name:
string location:
optional body bio:

-- ft.markdown:

Each field has a type. `caption` is an alias for `string`, and tells ftd that
the value can come in the "caption" position, after the `:` of the "section line",
eg lines that start with `--` or `---`. If a field is optional, it must be marked
as such.

-- ft.code:
lang: ftd

\-- person amitu: Amit Upadhyay
location: Bangalore, India

Amit is the founder and CEO of FifthTry.

He loves to code, and is pursuing his childhood goal of
becoming a professional starer of the trees.

\-- person list employees:

\-- employees: Sourabh Garg
location: Ranchi, India

\-- employees: Arpita Jaiswal
location: Lucknow, India

Arpita is the primary author of FTD language.


[Start Here](/language/)

FTD is meant to be a universal file format for text-based data, think of XML done
right.

Discord: Join our [`ftd` channel](https://discord.gg/xN3uD8P7WA).

Twitter: [@FifthTryHQ](https://twitter.com/fifthtryhq)

License: BSD

Checkout the [Roadmap & RFCs](/roadmap/) and [Changelog](/changelog/).


-- ft.youtube:
id: ZoCGwt_nLbk


-- ft.youtube:
id: h0uLW9hucLw


-- ft.youtube:
id: n341w3GwdrQ


-- ft.youtube:
id: qyP8bBBAu98
