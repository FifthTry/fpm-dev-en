-- my-ds.page: `ftd.code`

`ftd.code` is a component used to render the code component in an `ftd`
document.

-- ds.rendered: Sample Usage

-- ds.rendered.input:

\-- ftd.code:
lang: py

print("hello world")

-- ds.rendered.output:

-- ftd.code:
lang: py

print("hello world")

-- end: ds.rendered.output

-- end: ds.rendered

-- ds.h1: Attributes

The `ftd.code` component accepts the below attributes along with the
[common attributes](ftd/common/).


-- ds.h2: `text: caption or body`

This is the text or code to show. It accepts the value both in [caption
or body](ftd/built-in-types/#caption-or-body) besides in header.

-- ds.rendered: Sample code using `text`

-- ds.rendered.input:

\-- ftd.code:
lang: py
text: print("hello world") ;; <hl>

-- ds.rendered.output:

-- ftd.code:
lang: py
text: print("hello world")

-- end: ds.rendered.output

-- end: ds.rendered

-- ds.h2: `lang: optional string`

The `lang` property defines the language of the code. It is an
optional field. In case if the value is not provided, this
will take `txt` as default value.

-- ds.rendered: Sample code using `lang`

-- ds.rendered.input:

\-- ftd.code:
lang: py ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered


-- ds.h2: `theme: optional string`

The `theme` property defines the theme for the code block.
It is an optional field with default value `base16-ocean.dark`.

The available themes are:

- base16-ocean.dark
- base16-ocean.light
- base16-eighties.dark
- base16-mocha.dark
- InspiredGitHub
- Solarized (dark)
- Solarized (light)

Refer [this](https://docs.rs/syntect/latest/syntect/highlighting/struct.ThemeSet.html#method.load_defaults)
for the list of themes available

-- ds.rendered: Sample code using `base16-ocean.dark` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: base16-ocean.dark ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: base16-ocean.dark

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered







-- ds.rendered: Sample code using `base16-ocean.light` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: base16-ocean.light ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: base16-ocean.light

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered






-- ds.rendered: Sample code using `base16-eighties.dark` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: base16-eighties.dark ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: base16-eighties.dark

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered






-- ds.rendered: Sample code using `base16-mocha.dark` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: base16-mocha.dark ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: base16-mocha.dark

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered






-- ds.rendered: Sample code using `InspiredGitHub` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: InspiredGitHub ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: InspiredGitHub

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered






-- ds.rendered: Sample code using `Solarized (dark)` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: Solarized (dark) ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: Solarized (dark)

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered






-- ds.rendered: Sample code using `Solarized (light)` theme

-- ds.rendered.input:

\-- ftd.code:
lang: py
theme: Solarized (light) ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
theme: Solarized (light)

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered


-- ds.h2: `text-align: optional ftd.text-align`

This property is used to align the text within `ftd.code`. It accepts the
[`ftd.text-align`](ftd/built-in-types/#ftd-text-align) type value and is
optional.

- center
- start
- right
- justify

-- ds.h3: `center`

The inline contents are centered within the line box.

-- ds.rendered: Sample code using `text-align: center`

-- ds.rendered.input:

\-- ftd.code:
lang: py
width.fixed.px: 400
text-align: center ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
width.fixed.px: 400
text-align: center

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered





-- ds.h3: `start`

The inline contents are aligned to the left edge of the line box.

-- ds.rendered: Sample code using `text-align: start`

-- ds.rendered.input:

\-- ftd.code:
lang: py
width.fixed.px: 400
text-align: start ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
width.fixed.px: 400
text-align: start

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered





-- ds.h3: `end`

The inline contents are aligned to the right edge of the line box.

-- ds.rendered: Sample code using `text-align: end`

-- ds.rendered.input:

\-- ftd.code:
lang: py
width.fixed.px: 400
text-align: end ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
width.fixed.px: 400
text-align: end

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered






-- ds.h3: `justify`

The inline contents are justified. Text should be spaced to line up
its left and right edges to the left and right edges of the line box,
except for the last line.

-- ds.rendered: Sample code using `text-align: justify`

-- ds.rendered.input:

\-- ftd.code:
lang: py
width.fixed.px: 400
text-align: justify ;; <hl>

value = "hello world"
print(value)

-- ds.rendered.output:

-- ftd.code:
lang: py
width.fixed.px: 400
text-align: justify

value = "hello world"
print(value)

-- end: ds.rendered.output

-- end: ds.rendered

-- end: my-ds.page
