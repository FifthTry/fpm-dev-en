


-- ft.page:


-- ft.h0: `FASTN.ftd`

In every [FASTN package](/fastn/fs/) there must be a file named `FASTN.ftd`.


-- ft.code:
lang: ftd

\-- import: fastn

\-- fastn.package: amitu
repo: github


-- ft.h1: `fastn.package`

This is the only mandatory `ftd section` in `FASTN.ftd` file.


-- ft.h2: `name: caption`

This is the name of the package. This is the only required value.


-- ft.h2: `repo: optional string`

An FASTN package can be hosted on [`fastn-repo`](/fastn/about/) or on Github etc.

If the key is missing, the package is assumed to be hosted on `fastn-repo`, 
`www.fifthtry.com`.

If the package is hosted on Github, then it must be `repo: github`. 

Note: package name must match with the repo related name. Eg for a package hosted
on Github under the repo: `github.com/foo/bar` must have the package name: 
`foo/bar`.

The value of `repo` can also be path to a `.zip` file, so if you want to use an
specific version from Git repo, you can locate its corresponding `.zip` file and
store it here.


-- ft.h1: `fastn.dependency`

A package can depend on another package.


-- ft.code:
lang: ftd

\-- import: fastn

\-- fastn.package: amitu

\-- fastn.dependency: fifthtry/fastn-blog
repo: github


-- ft.markdown:

Here the package `amitu` has a dependency on `fifthtry/fastn-blog`. When any 
dependency is specified, `fastn build` downloads and stored it in `.packages` folder.

Any number of dependencies can be mentioned.


-- ft.h2: `repo`

This is the repo where the dependency is hosted. If the `repo` is omitted it is 
assumed to the same as `repo` of the current package.


-- ft.h1: `fastn.font`

Any custom fonts can be included in FTD generated HTML files by using `font` 
blocks:


-- ft.code:
lang: ftd

\-- fastn.font: myFirstFont
woff: sansation_light.woff
woff2: sansation_light.woff


-- ft.h2: `name: caption`

`name` is required, it must be used to refer to the font in the ftd files, eg:


-- ft.code:
lang: ftd

\-- ftd.text: hello
font: myFirstFont


-- ft.h2: `woff`, `woff2`

The URL of the font files. Both `woff` and `woff2` are supported. We will use
`woff2` if it is provided, else `woff`. 

At least one of the two must be provided.