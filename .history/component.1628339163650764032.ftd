-- import: fifthtry/ft


-- ft.h0: `component`

A `component` is `ftd` is similar to "react component", `components` have 
"arguments", this the data that must be passed to them, and using `component`s we 
construct user interface.


-- ft.h1: kernel components

`ftd` comes with a few "kernel" components, these components are the building 
blocks for building all other components.

Note: `ftd` supports `import`ing one document from another, and the imported 
documents act as a namespace. 

All ftd components are defined in a "virtual document", named `ftd`, and every
`ftd` file implicitly imports ftd:


-- ft.code: ftd hello world using `ftd.text`
lang: ftd

\-- import: ftd

\-- ftd.text: hello world


-- ft.markdown:

The `import` line is not needed as its automatically imported. This line defines 
namespace `ftd`, so all `ftd` kernels components are referred as `ftd.text` and 
so on.

We are then using a component named [`ftd.text`](/fifthtry/ftd/text/) to render 
the text "hello world" in the UI.

List of `ftd` kernel components:

- [`ftd.column`](/fifthtry/ftd/column/)
- [`ftd.row`](/fifthtry/ftd/row/)
- [`ftd.text`](/fifthtry/ftd/text/)
- [`ftd.image`](/fifthtry/ftd/image/)
- [`ftd.iframe`](/fifthtry/ftd/iframe/)
- [`ftd.integer`](/fifthtry/ftd/integer/)
- [`ftd.decimal`](/fifthtry/ftd/decimal/)
- [`ftd.boolean`](/fifthtry/ftd/boolean/)


-- ft.h1: User Defined Components

New components can be defined using existing components using the `component` 
keyword:


-- ft.code:
lang: ftd

\-- component greet:
component: ftd.text
$who: caption
text: ref $who


-- ft.markdown:

Here we have defined a new component `greet` using `ftd.text` component.

Our component `greet` has one argument, `$who`, whose type is `caption`, so it
can be passed either as `ftd::p1` header, or caption (read more [about 
types](/fifthtry/ftd/built-in-types/) here).

We accept the argument `$who` and pass it to `ftd.text` as `text` field (`text: 
ref $who`).