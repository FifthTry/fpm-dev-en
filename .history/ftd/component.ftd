-- import: ftd.dev/assets
-- import: fastn


-- my-ds.page: `component`

-- ds.markdown: 

A `component` in `ftd` is similar to "react component". Components are
independent and reusable bits of code. `component`s have  "arguments", these are
the data that must be passed to them, and using `component`s we construct the
user interface.


-- ds.h1: Defining A Component

New components are defined using the `component` keyword:


-- ds.code:
lang: ftd

\-- component heading:
caption title:

\-- ftd.text: $heading.title
color: red

\-- end: heading


-- ds.markdown:

Here, we have defined a new component `heading`.


-- ds.h2: Parent Component

Every component inherits from a "parent component". This is provided by the 
[header](p1-grammar/) `component`.

In this case, our `heading` component is using `ftd.text`. We are creating a
custom-component which shows given text in `red` color.


-- ds.h3: Kernel Components

So, how is `ftd.text` implemented? `ftd` comes with some "kernel components",
these are the lowest level components that every other component uses directly
or indirectly.

Read about our [kernel components guide](kernel/) to learn about 
these components.


-- ds.h2: Component Arguments

Component "arguments" starts with argument type follow by argument name, in our
component we have one such argument, `title`.

The type of our `title` argument is `caption`. You can read more about `caption`
in the [`ftd` types guide](built-in-types/).

The arguments in FTD components creates variables for each component invocation.
These variables have local scope. This means that these variables can be
accessed only inside the component definition in which they are declared.


-- ds.h2: Component Invocation

Till now, we have created a component called `heading`. Now to invoke or render
this component in your FTD application, we can do the following


-- ds.code:
lang: ftd

\-- heading: I love FTD!!

-- ds.markdown:

The output looks like this:

-- ds.output: `heading` invocation

-- heading: I love FTD!!

-- end: ds.output



-- ds.h3: Arguments with Default Values

An argument can be defined with a default value:


-- ds.code:
lang: ftd

\-- component foo:
caption name:
ftd.color text-color: red

\-- ftd.text: $foo.name
color: $foo.text-color

\-- end: foo


;; uses default value of text-color
\-- foo: hello

\-- foo: this is nice
text-color: green


-- ds.markdown:

Since `foo` defines `text-color` with a default value, it is used in the first
instance, and in second we overwrite the default value with `green`.

-- ds.output: `foo` with default `text-color`

--  foo: hello

-- end: ds.output


-- ds.output: `foo` with `text-color` value as `green`

-- foo: this is nice
text-color: green

-- end: ds.output


-- ds.h2: Component Arguments for event handling

The arguments in FTD components can be used for handling events.


-- ds.code:
lang: ftd

\-- component foo-with-event:
caption name:
boolean $open: true

\-- ftd.text: $foo-with-event.name
if: { foo-with-event.open }
$on-click$: $ftd.toggle($a = $foo-with-event.open)

\-- end: foo-with-event


-- ds.markdown:

This will create an `open` variable with local scope. We are using `if` to only
show the component if `open` is `true`, which will be the case by default as we
have given default value as `true` to `open` declaration.

We have also set `click` event handler with an action `$ftd.toggle($a =
$foo-with-event.open)`, so the effect would be if someone clicks on the message,
it will go away.


-- ds.output: `foo` with `text-color` value as `green`

-- foo-with-event: I'll hide if you click me!

-- end: ds.output


-- ds.h2: Using Container Components

Some components have children. `ftd` comes with two kernel container components,
[`ftd.row`](row/) and [`ftd.column`](column/).


-- ds.code:
lang: ftd

\-- component label:
caption name:
body value:

\-- ftd.row
spacing.px: 5

\--- ftd.text: $label.name

\--- ftd.text: $label.value

\-- end: ftd.row

\-- end: label



-- ds.markdown:

Here we are trying to create a "label" component, which has two arguments,
`name` and `value`.

The `label` component is an `ftd.row` and has two `ftd.text` children.
`ftd.row` shows its children in a single row.

Note that the two `ftd.text` are sub-sections of the `ftd.row` section (review
[ftd.p1 grammar](p1-grammar/)).

We have passed the component arguments `name` and `value` to first and second
`ftd.text` respectively.

A container component can use other container components and create an hierarchy
of such components.


-- ds.h1: Using Components

Say we want to use our heading and label components:


-- ds.code:
lang: ftd

\-- ftd.column:
spacing.px: 20
border-width.px: 1
border-radius.px: 5
padding.px: 10

\-- heading: hello there! This is my heading

\-- label: Name
value: Amit Upadhyay

\-- label: Location
value: Banglore, India

\-- end: ftd.column


-- ds.markdown:

Here we have created one heading and two labels. 

We have placed the `heading` and `label`s inside an `ftd.column` to put some 
spacing between them.

This is how it looks like:



-- ds.output: `heading` and `label` in `ftd.column`

-- ftd.column:
spacing.fixed.px: 20
border-width.px: 1
border-radius.px: 5
border-color: $inherited.colors.border
padding.px: 20

-- heading: hello there! This is my heading

-- label: Name:
value: Amit Upadhyay

-- label: Location:
value: Banglore, India

-- end: ftd.column

-- end: ds.output





-- ds.h1: Conditional Components

`ftd` supports a `if` to decide if the component should be visible or not, based
on the arguments, or global variables.


-- ds.code:
lang: ftd

\-- boolean dark-mode: true

\-- ftd.text: we are in dark mode
if: { ftd.dark-mode }

\-- ftd.text: we are in light mode
if: { !ftd.dark-mode }


-- ds.output: Conditional component

-- ftd.text: we are in dark mode
color: $inherited.colors.text
if: { ftd.dark-mode }

-- ftd.text: we are in light mode
color: $inherited.colors.text
if: { !ftd.dark-mode }

-- end: ds.output


-- ds.markdown:

We have inserted two `ftd.text` components, but only one of them would be visible,
based on the value of the `dark-mode` variable.

Read more about it in [conditional components guide](if/).


-- end: my-ds.page










-- component heading:
caption title:

-- ftd.text:
text: $heading.title
color: red

-- end: heading








-- component label: 
caption name:
body value:

-- ftd.row:
width: fill-container
spacing.fixed.px: 5
color: $inherited.colors.text

-- ftd.text: $label.name

-- ftd.text: $label.value

-- end: ftd.row

-- end: label








-- component foo:
caption name:
ftd.color text-color: red

-- ftd.text: $foo.name
color: $foo.text-color

-- end: foo









-- component foo-with-event:
caption name:
boolean $open: true

-- ftd.text: $foo-with-event.name
if: { foo-with-event.open }
$on-click$: $ftd.toggle($a = $foo-with-event.open)
color: $inherited.colors.text

-- end: foo-with-event
