-- import: fifthtry/ft


-- ft.h0: Roadmap & RFCs


-- ft.markdown:

- ongoing: [`$loop$` to loop over a list](/fifthtry/ftd/~/23/)
- [`$processor$`: transform/load data](/fifthtry/ftd/~/19/)
- [argument with default value](/fifthtry/ftd/~/15/)
- [conditional attributes](/fifthtry/ftd/~/7/)
- [loop variable](/fifthtry/ftd/~/22/)
- [`$loop$` over `list`](/fifthtry/ftd/~/28/)
- implement markdown, code highlighting, katex etc using `$processor$`?
- [test improvements](/fifthtry/ftd/~/29/)


-- ft.h1: basic syntax

- object header eg `border: { top: 20 }`
- object merge `{ top: 0, left: 0 }`
- [better error handling](/fifthtry/ftd/~/10/)
- [`$end$` header](/fifthtry/ftd/~/20/)
- [`if` -> `$if$`](/fifthtry/ftd/~/26/) (not sure)


-- ft.h1: event handling

- component instance variables
- event: toggle bool
- event: cycle
- event: set value
- input -> variable data binding
- variants (device, mode{dark | light}, hover)


-- ft.h1: ui

- [font type](/fifthtry/ftd/~/6/)
- class
- oembed
- auto nesting (heading, list etc)
- off tree container management?
- table
- grid
- canvas or graphics (rectangle, circle, line, arrow etc primitives)


-- ft.h1: data modelling

- `-- <list-name>: ref x` to add `x` to `<list-name>` if type matches (and no 
  other header or body passed).
- [`datetime` type](/fifthtry/ftd/~/27/)
- color, align etc types (to act as type hint or doc)
- enum
- named-list
- expressions
  - list: empty | more than | less than


-- ft.h1: misc

- HTTP commands
- realm integration
- editor (click to select item, jump to definition)
- [ftd-lambda](/fifthtry/ftd/~/25/)