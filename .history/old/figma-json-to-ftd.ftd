-- import: fastn.dev/utils as utils
-- import: fastn/processors as pr
-- import: fastn.dev/sample-colors as my-cs

-- string sample-cs-json:
$processor$: pr.figma-cs-token
variable: $my-cs.colors
name: my-cs

-- string $ftd-output: None

-- string $formatted-ftd-output: None

-- void json-to-ftd(json,out,fout):
string json:
string $out:
string $fout:

value = figma_json_to_ftd(json);
out = value[0];
fout = value[1];

-- my-ds.page: Figma json to FTD

In `ftd`, we support converting figma json to FTD code which will
generate all color-scheme variables in FTD which can be used to create
a new color-scheme based on the json values.

`NOTE`: This conversion support is only available for
`new` figma json format.

-- ds.h1: `figma-json-to-ftd(json)` JS function

In `ftd`, we have a JS function `figma-json-to-ftd(json)` which will give you
the FTD code of all color-scheme variables as string. We can use this JS function
by creating a FTD function. This JS function takes `json` string as input and
returns two strings as string list [ftd_cs_string, formatted_ftd_cs_string].

`ftd_cs_string` - string containing all `ftd` color-scheme variables

`formatted_ftd_cs_string` - stylized string (based on `ftd syntax`) containing
all `ftd` color-scheme variables.

-- ds.code: FTD function using `figma-json-to-ftd` JS function
lang: ftd

\-- void json-to-ftd(json,ftd_cs_string,formatted_ftd_cs_string):
string json:
string $ftd_cs_string:
string $formatted_ftd_cs_string:

value = figma_json_to_ftd(json);
ftd_cs_string = value[0];
formatted_ftd_cs_string = value[1];

-- ds.markdown:

The above `json-to-ftd` FTD function will assign the returned string values from the
JS function `figma_json_to_ftd` to the mutable strings `ftd_cs_string` and
`formatted_ftd_cs_string` respectively.

-- ds.h2: Sample code snippets

-- utils.show-hide-code:
lang: json
display-text: `Sample json input` (Click to show)
code: $sample-cs-json
code-title: Sample input json

-- utils.show-hide-code:
lang: ftd
display-text: `Sample FTD code` generated from the above `json input` (Click to show)
code: $formatted-ftd-output
code-title: Sample FTD code output
$on-click$: $json-to-ftd(json = $sample-cs-json, $out = $ftd-output, $fout = $formatted-ftd-output)

-- end: my-ds.page