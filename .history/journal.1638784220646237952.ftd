


-- ft.page:


-- ft.h0: FPM Journal


-- ft.h1: Dynamic Documents and FPM Action

6th Dec 2021

Recently I implemented `$processor$: http`, which paves the way for almost fully
fledged ["dynamic"/data drive documents](///www.fifthtry.com/fpm/~/20/). To really
expose this feature, we can implement arbitrary URL handing, currently only the 
URLs corresponding to actual FTD files is available, this is too limiting as we can
not have author page for example, where we need a URL for each author, and author 
list maybe in a table, or spread all over ftd documents. 

With a `FPM/URLs.ftd`, we can define URL patterns that can contain dynamic data, eg
`/<username>/` etc. We can map each URL pattern to a FTD file, and the file can 
extract the data by defining a schema (eg a record), where the fields of record 
would be populated by URL query parameters, URL fragments (eg `username`) here, or
even request body if its available.

We will sometime need redirect etc, eg if you need login to access something, or
if the page has moved etc. So we need a mechanism to early return, currently its
not possible in a FTD document to let a document say we are done processing the
page. At least we can have some standard variable, eg `fpm.redirect-url`, which 
when set, FPM will ignore the document and return the content of `fpm.redirect-url`
instead, along with some instruction to `fpm.js` to update the URL displayed in
browser.

This is almost the design of [`realm`](///amitu.com/realm/). Once I wrote that I 
realised we also need an equivalent of "realm actions", and turned out the design
is really easy. Wrote about it in another CR: [fpm 
actions](///www.fifthtry.com/fpm/~/24/). 

The key element of actions is now we need a `fpm.js`, which will have some 
behaviour, and this paves the way for [fpm client 
variables](///www.fifthtry.com/fpm/~/25/).


-- ft.h1: Client Variables

Some variables can only be computed by client. So we need to ship a `fpm.js`, which
will compute them, and pass them to FTD. Some of these variables would also change
during the lifetime of the page.

`fpm.js` will also do some browser history control, for managing server side 
"internal redirect", and `fpm actions`.


-- ft.h1: `fpm sync`, `fpm status` and `fpm diff`

5th Nov 2021

Arpita has been on fire, implemented these three commands. This makes `fpm` puts
some "version control" features in `fpm`. Our goal is not become simplified git,
we definitely take a lot of inspiration from them, but more like advance 
Dropbox/iCloud.

`fpm repo` is needed before we can really call ourselves version control or compare
ourselves with Dropbox/iCloud etc. But if you are using Dropbox/iCloud, you can
already benefit from these commands.

Our goal now is to implement [`adhoc tracking`](/fpm/~/12/), and get to 
[`translation tracking`](/fpm/~/3/).


-- ft.h1: [`$processor$: toc` and `$processor$: http`

5th Nov 2021

We implemented [these two processors](/fpm/processors/). TOC processor helps you 
when you are trying to create navigation bars, or table of content of your FPM 
site (this is not the intra page TOC, which we still do not know how to implement).

`$processor$: http` lets you fetch data from any HTTP endpoint that returns JSON 
when rendering a FTD document. It opens up massive opportunities, you can fetch 
data from all sorts of places, data driven graphs and tables etc can be created.


-- ft.h1: Font Support

4th Nov 2021

We just added font support. This allows people to use custom fonts with FTD/FPM.

You can specify the fonts you want loaded in [`FPM.ftd`](/fpm/FPM/) file.


-- ft.h1: Update for 30th Nov 2021

Shobhit is working full time on FPM now. We managed to nail down quite a bit of 
our design now.


-- ft.h2: `fpm build` working

Finally we can start using `fpm`. We have created a template repo: 
[FifthTry/fpm-blog](https://github.com/FifthTry/fpm-blog), [rendered 
version](https://fifthtry.github.io/fpm-blog/), which shows how to create a blog 
using FTD and FPM.


-- ft.h2: Design Review With Arpita

Me and Arpita recorded a detailed design review of FPM.


-- ft.youtube:
id: rny1EGkqw_M


-- ft.h1: Kickoff

25th Nov 2021

We have started working on this project now. We have written design docs for quite
a few elements:

- `fpm build`: [file system organization](/fpm/~/1/)
- [logical linking](/fpm/~/2/)
- [translation tracking](/fpm/~/3/)
- [version tracking](/fpm/~/5/)
- [history tracking](/fpm/~/4/)
- [cr tracking](/fpm/~/6/)
- [upstream tracking: two way sync](/fpm/~/7/)
- [`fpm-repo` authentication](/fpm/~/8/)
- [package dependencies](/fpm/~/9/)
- [access control](/fpm/~/10/)

[Shobhit](https://github.com/sharmashobit) is taking the lead of implementing this.
We are hoping to create a minimal version that can convert ftd files to HTML so
`fpm` can be considered an alternative to static site generators.