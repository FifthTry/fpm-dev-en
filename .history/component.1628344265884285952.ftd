-- import: fifthtry/ft


-- ft.h0: `component`

A `component` in `ftd` is similar to "react component", `components` have 
"arguments", this the data that must be passed to them, and using `component`s we 
construct the user interface.


-- ft.h1: Creating A Component

New components are defined using the `component` keyword:


-- ft.code:
lang: ftd

\-- component heading:
component: ftd.text
$title: caption
text: ref $title
size: 18


-- ft.markdown:

Here we have defined a new component `heading`.


-- ft.h2: Parent Component

Every component inherits from a "parent component". This is provided by the 
[header](/fifthtry/ftd/p1-grammar/) `component`.

In this case, our `heading` component is using `ftd.text`. We are creating a
custom-component with shows given text with the font size of 18 pixels.


-- ft.h3: Kernel Components

So how is `ftd.text` implemented? `ftd` comes with some "kernel components", these are the lowest
level components that every other component uses directly or indirectly.

Read about our [kernel components guide](/fifthtry/ftd/kernel/) to learn about 
these components.


-- ft.h2: Component Arguments

Component "arguments" starts with `$`, in our component we have one such argument,
`$title`. 

The type of our `$title` argument is `caption`. You can read more about `caption` 
in the [`ftd` types guide](/fifthtry/ftd/built-in-types/).