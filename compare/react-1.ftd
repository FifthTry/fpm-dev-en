-- import: fastn.com/ftd as ftd-index
-- import: fastn-community.github.io/bling/quote
-- import: fastn-community.github.io/bling/modal-cover

-- ds.page:
sidebar: false
full-width: true

-- very-easy-syntax:

-- readymade-components:

-- fullstack-framework:

-- design-system:

-- seo:

-- visualize-with-vercel:

-- fastn-best-choice-for-startup:

-- end: ds.page











-- component very-easy-syntax:
boolean $show-modal: false

-- ftd.column:
width: fill-container

-- ftd.desktop:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Very Easy Syntax
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text
text-align: center

fastn simplifies programming making it accessible to everyone. Developers,
designers, and non-programmers alike can easily learn fastn to build stunning
web projects.

Its **user-friendly interface and minimal syntax** allow even those with no
prior programming experience to grasp its functionalities swiftly.

Take the below examples for instance.

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 24
width: fill-container

-- ftd.text: Chat Message
role: $inherited.types.heading-small
color: $inherited.colors.text-strong

-- ftd.row:
width: fill-container
spacing.fixed.px: 18

-- ds.code:
lang: ftd

\-- chat-female-avatar: Hello World! ðŸ˜€

\-- chat-female-avatar:

I'm Nandhini, a freelance content writer.

\-- chat-female-avatar:

Fun fact: I also built this entire page with fastn! ðŸš€
It's that easy!

-- ftd.column:
width: fill-container
height.fixed.px: 289
border-radius.px: 8
margin-top.px: 12
padding.px: 18
background.solid: $inherited.colors.background.step-1

-- ftd-index.chat-female-avatar: Hello World! ðŸ˜€

-- ftd-index.chat-female-avatar:

I'm Nandhini, a freelance content writer.

-- ftd-index.chat-female-avatar:

Fun fact: I built this entire page with fastn! ðŸš€

It's that easy!

-- end: ftd.column

-- end: ftd.row

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 24
width: fill-container

-- ftd.text: Quote
role: $inherited.types.heading-small
color: $inherited.colors.text-strong

-- ftd.row:
width: fill-container
spacing.fixed.px: 18

-- ftd.column:
width: fill-container
height.fixed.px: 289
border-radius.px: 8
margin-top.px: 12
padding.px: 18
background.solid: $inherited.colors.background.code

-- ds.code:
lang: ftd

\-- quote.rustic: Nandhini

It's liberating to control the outcome as the creator. I can swiftly bring
changes to life without delay or intermediaries.

-- end: ftd.column

-- ftd.column:
width: fill-container
height.fixed.px: 289
border-radius.px: 8
margin-top.px: 12
padding.px: 18
background.solid: $inherited.colors.background.step-1

-- quote.rustic: Nandhini

It's liberating to control the outcome as the creator. I can swiftly bring
changes to life without delay or intermediaries.

-- end: ftd.column

-- end: ftd.row

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 24
width: fill-container

-- ftd.text: Modal Cover
role: $inherited.types.heading-small
color: $inherited.colors.text-strong

-- ftd.row:
width: fill-container
spacing.fixed.px: 18

-- ds.code:
lang: ftd

\-- boolean $show-modal: false

\-- modal-cover.button: Click to Open
$on-click$: $ftd.toggle($a = $show-modal)
disable-link: true

\-- modal-cover.modal-cover: fastn fun-fact
$open: $show-modal

**`If you can type, you can code!`**

-- ftd.column:
width: fill-container
height.fixed.px: 289
border-radius.px: 8
margin-top.px: 12
align-content: center
padding.px: 18
background.solid: $inherited.colors.background.step-1

-- modal-cover.button: Click to Open
$on-click$: $ftd.toggle($a = $very-easy-syntax.show-modal)
disable-link: true

-- modal-cover.modal-cover: fastn fun-fact
$open: $very-easy-syntax.show-modal

**`If you can type, you can code!`**

-- end: ftd.column

-- end: ftd.row

-- end: ftd.column

-- end: ftd.column

-- end: ftd.desktop

-- ftd.mobile:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Very Easy Syntax
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text
text-align: center

fastn simplifies programming making it accessible to everyone. Developers,
designers, and non-programmers alike can easily learn fastn to build stunning
web projects.

Its **user-friendly interface and minimal syntax** allow even those with no
prior programming experience to grasp its functionalities swiftly.

Take the below examples for instance.

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 24
width: fill-container

-- ftd.text: Chat Message
role: $inherited.types.heading-small
color: $inherited.colors.text-strong

-- ds.code:
lang: ftd

\-- chat-female-avatar: Hello World! ðŸ˜€

\-- chat-female-avatar:

I'm Nandhini, a freelance content writer.

\-- chat-female-avatar:

Fun fact: I also built this entire page with fastn! ðŸš€
It's that easy!

-- ftd.column:
width: fill-container
border-radius.px: 8
margin-top.px: 12
padding.px: 18
background.solid: $inherited.colors.background.step-1

-- ftd-index.chat-female-avatar: Hello World! ðŸ˜€

-- ftd-index.chat-female-avatar:

I'm Nandhini, a freelance content writer.

-- ftd-index.chat-female-avatar:

Fun fact: I built this entire page with fastn! ðŸš€

It's that easy!

-- end: ftd.column

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 24
width: fill-container

-- ftd.text: Quote
role: $inherited.types.heading-small
color: $inherited.colors.text-strong

-- ftd.column:
width: fill-container
border-radius.px: 8
margin-top.px: 12
padding.px: 18
background.solid: $inherited.colors.background.code

-- ds.code:
lang: ftd

\-- quote.rustic: Nandhini

It's liberating to control the outcome as the creator. I can swiftly bring
changes to life without delay or intermediaries.

-- end: ftd.column

-- ftd.column:
width: fill-container
border-radius.px: 8
margin-top.px: 12
padding.px: 18
background.solid: $inherited.colors.background.step-1

-- quote.rustic: Nandhini

It's liberating to control the outcome as the creator. I can swiftly bring
changes to life without delay or intermediaries.

-- end: ftd.column

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 24
width: fill-container

-- ftd.text: Modal Cover
role: $inherited.types.heading-small
color: $inherited.colors.text-strong

-- ds.code:
lang: ftd

\-- boolean $show-modal: false

\-- modal-cover.button: Click to Open
$on-click$: $ftd.toggle($a = $show-modal)
disable-link: true

\-- modal-cover.modal-cover: fastn fun-fact
$open: $show-modal

**`If you can type, you can code!`**

-- ftd.column:
width: fill-container
border-radius.px: 8
margin-top.px: 12
align-content: center
padding.px: 18
background.solid: $inherited.colors.background.step-1

-- modal-cover.button: Click to Open
$on-click$: $ftd.toggle($a = $very-easy-syntax.show-modal)
disable-link: true

-- modal-cover.modal-cover: fastn fun-fact
$open: $very-easy-syntax.show-modal

**`If you can type, you can code!`**

-- end: ftd.column

-- end: ftd.column

-- end: ftd.column

-- end: ftd.mobile

-- end: ftd.column

-- end: very-easy-syntax










-- component readymade-components:

-- ftd.column:
width: fill-container
spacing.fixed.em: 0.8

-- ds.h1: Rich collection of readymade components

fastn's versatility accommodates a wide range of projects, from landing pages to
complex web applications, giving startups the agility they need to adapt and
evolve.

You can choose from numerous components that suit your needs.
There are [doc-sites](https://fastn.com/featured/doc-sites/),
[blogs](https://fastn.com/featured/blog-templates/),
[landing pages](https://fastn.com/featured/landing-pages/)
to individual component library like [bling](https://fastn-community.github.io/bling/),
[hero sections](https://fastn.com/featured/sections/heros/), and more.

The best part? All components in the ecosystem adhere to a unified design
system. This ensures that every component blends seamlessly with others,
creating a cohesive look and feel across your entire site.

-- ds.h2: Create your own custom component

From buttons that seamlessly blend with your design to interactive elements that
engage users, fastn makes component creation intuitive and efficient.

-- ds.code: Creating a custom component
lang: ftd

\-- toggle-text: fastn is cool!


\-- component toggle-text:
boolean $current: false
caption title:

\-- ftd.text: $toggle-text.title
align-self: center
color if { toggle-text.current }: $inherited.colors.cta-primary.disabled
color: $inherited.colors.cta-primary.text
role: $inherited.types.heading-tiny
background.solid: $inherited.colors.cta-primary.base
padding.px: 20
border-radius.px: 5
$on-click$: $ftd.toggle($a = $toggle-text.current)

\-- end: toggle-text

-- ds.output:

-- ftd-index.toggle-text: fastn is cool!

-- end: ds.output


-- ds.h2: Content Components

In fastn, you can create custom content components for recurring information.
This ensures a consistent user experience throughout your website while saving
your time.

-- ds.h2: Functional Components

fastn's dynamic features lets you create engaging user experiences that capture
and retain customer interest.

-- ds.h3: Event Handling Made Simple

We've got a range of built-in events in fastn. Handle clicks, mouse actions,
and more. fastnâ€™s event handling capabilities can be used to create fully
functional frontend applications.


-- ds.rendered:

-- ds.rendered.input:

\-- boolean $show: true

\-- ftd.text: Enter mouse cursor over me
$on-mouse-enter$: $ftd.set-bool($a = $show, v = true)
$on-mouse-leave$: $ftd.set-bool($a = $show, v = false)

\-- ftd.text: Hide and Seek
if: { show }

-- ds.rendered.output:

-- on-mouse-leave-event:

-- end: ds.rendered.output

-- ds.h3: Built-in Rive

Elevate your website's visual appeal with built-in Rive animations. Easily embed
animations into your fastn documents for engaging user experiences.


-- ds.rendered:

-- ds.rendered.input:

\-- string $idle: Unknown Idle State

\-- ftd.text: $idle

\-- ftd.rive:
id: vehicle
src: https://cdn.rive.app/animations/vehicles.riv
autoplay: false
artboard: Jeep
$on-rive-play[idle]$: $ftd.set-string($a = $idle, v = Playing Idle)
$on-rive-pause[idle]$: $ftd.set-string($a = $idle, v = Pausing Idle)

\-- ftd.text: Idle/Run
$on-click$: $ftd.toggle-play-rive(rive = vehicle, input = idle)

-- ds.rendered.output:

-- on-rive-play-pause-event:

-- end: ds.rendered.output

-- end: ds.rendered

-- end: ftd.column

-- end: readymade-components










-- component on-mouse-leave-event:
boolean $show: false

-- ftd.column:
color: $inherited.colors.text

-- ftd.text: Enter mouse cursor over me
$on-mouse-enter$: $ftd.set-bool($a = $on-mouse-leave-event.show, v = true)
$on-mouse-leave$: $ftd.set-bool($a = $on-mouse-leave-event.show, v = false)

-- ftd.text: Hide and Seek
if: { on-mouse-leave-event.show }

-- end: ftd.column

-- end: on-mouse-leave-event








-- component fullstack-framework:

-- ftd.column:
width: fill-container

-- ftd.desktop:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Full stack framework
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text

Along with [building frontends](https://fastn.com/frontend/), `fastn` can be
used for building data driven websites and dashboards.

-- end: ftd.column

-- ftd.row:
width: fill-container
spacing.fixed.px: 18

-- ds.h2: Seamless API Integration

You can interact with backend APIs, and use the API responses to
- Create dynamic web pages,
- Display and render the response data
- Conditional Rendering. etc.

Checkout the [http processor](https://fastn.com/http/) to know more.

-- ds.code: fetching data from API
lang: ftd

\-- import: fastn/processors as pr

\-- result r:
$processor$: pr.http
url: https://api.github.com/search/repositories
sort: stars
order: desc
q: language:python

-- end: ftd.row

-- ftd.row:
width: fill-container
spacing.fixed.px: 18

-- ds.h2: Effortless SQL Interaction

Query data from SQLite databases to create dynamic websites.
Our [package query processor](https://fastn.com/package-query/) makes it a
breeze.

-- ds.code: Working With SQL Is Breeze
lang: ftd

\-- import: fastn/processors as pr

\-- people:
$processor$: pr.package-query
db: db.sqlite

SELECT * FROM user;

\-- show-person: $p
$loop$: $people as $p

-- end: ftd.row

-- end: ftd.column

-- end: ftd.desktop

-- ftd.mobile:

-- ftd.column:
width: fill-container
spacing.fixed.px: 28
margin-vertical.px: 34

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Full stack framework
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text
text-align: center

Along with [building frontends](https://fastn.com/frontend/), `fastn` can be
used for building data driven websites and dashboards.

-- end: ftd.column

-- ftd.column:
width: fill-container
spacing.fixed.px: 18

-- ds.h2: Seamless API Integration

You can interact with backend APIs, and use the API responses to
- Create dynamic web pages,
- Display and render the response data
- Conditional Rendering. etc.

Checkout the [http processor](https://fastn.com/http/) to know more.

-- ds.code: fetching data from API
lang: ftd

\-- import: fastn/processors as pr

\-- result r:
$processor$: pr.http
url: https://api.github.com/search/repositories
sort: stars
order: desc
q: language:python

-- end: ftd.column

-- ftd.column:
width: fill-container
spacing.fixed.px: 18

-- ds.h2: Effortless SQL Interaction

Query data from SQLite databases to create dynamic websites.
Our [package query processor](https://fastn.com/package-query/) makes it a
breeze.

-- ds.code: Working With SQL Is Breeze
lang: ftd

\-- import: fastn/processors as pr

\-- people:
$processor$: pr.package-query
db: db.sqlite

SELECT * FROM user;

\-- show-person: $p
$loop$: $people as $p

-- end: ftd.column

-- end: ftd.column

-- end: ftd.mobile

-- end: ftd.column

-- end: fullstack-framework







-- component design-system:

-- ftd.column:
width: fill-container

-- ftd.desktop:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Opinionated Design System
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text

fastn comes with integrated design system. We've many pre-made design choices
so you can build your website quickly.

-- end: ftd.column

-- ds.h2: Unified Color and Typography

A lot of [color scheme](/featured/cs/) and
[typography](featured/fonts-typography/) packages are available, which you can
import and change the entire typography or color scheme in a few lines of code.

You can manage color palettes and typography centrally to save time and ensure
consistent usage across your website.

-- ftd.row:
width: fill-container
spacing.fixed.px: 18

-- ds.image: fastn Colour Schemes
src: $fastn-assets.files.compare.cs.png
width.fixed.percent: 95
link: https://fastn.com/featured/cs/

-- ds.image: fastn Typography
src: $fastn-assets.files.compare.ty.png
width.fixed.percent: 95
link: https://fastn.com/featured/fonts-typography/

-- end: ftd.row

-- ds.h2: Seamless Figma Integration

Integrate Figma tokens with **`fastn`**'s color scheme or create your own scheme
from Figma JSON.

-- ds.image: Using Figma tokens with fastn colour scheme
src: $fastn-assets.files.images.figma.b1.select-forest-cs.png
width: fill-container

-- ftd.row:
width: fill-container
spacing.fixed.px: 24

-- ftd.column:
spacing.fixed.px: 12
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Responsive Ready
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

fastn has built in support for responsive design. Your creations automatically
adapt to the perfect size, whether your users are on mobile or desktop
devices.

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 12
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Built-in Dark and Light Modes
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

With fastn, you don't have to worry about crafting these modes from scratch â€“
they're included out of the box, enhancing both user accessibility and the
aesthetics of your online presence.

-- end: ftd.column

-- end: ftd.row

-- end: ftd.column

-- end: ftd.desktop

-- ftd.mobile:

-- ftd.column:
width: fill-container
spacing.fixed.px: 28
margin-vertical.px: 34

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Opinionated Design System
role: $inherited.types.heading-large
color: $inherited.colors.text-strong
text-align: center

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text
text-align: center

fastn comes with integrated design system. We've many pre-made design choices
so you can build your website quickly.

-- end: ftd.column

-- ds.h3: Unified Color and Typography

A lot of [color scheme](/featured/cs/) and
[typography](featured/fonts-typography/) packages are available, which you can
import and change the entire typography or color scheme in a few lines of code.

You can manage color palettes and typography centrally to save time and ensure
consistent usage across your website.

-- ftd.column:
width: fill-container
spacing.fixed.px: 18

-- ds.image: fastn Colour Schemes
src: $fastn-assets.files.compare.cs.png
width.fixed.percent: 95

-- ds.image: fastn Typography
src: $fastn-assets.files.compare.ty.png
width.fixed.percent: 95

-- end: ftd.column

-- ds.h2: Seamless Figma Integration

Integrate Figma tokens with **`fastn`**'s color scheme or create your own scheme
from Figma JSON.

-- ds.image: Using Figma tokens with fastn colour scheme
src: $fastn-assets.files.images.figma.b1.select-forest-cs.png
width: fill-container

-- ftd.row:
width: fill-container
spacing.fixed.px: 24
wrap: true

-- ftd.column:
spacing.fixed.px: 12
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Responsive Ready
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

fastn has built in support for responsive design. Your creations automatically
adapt to the perfect size, whether your users are on mobile or desktop
devices.

-- end: ftd.column

-- ftd.column:
spacing.fixed.px: 12
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Built-in Dark and Light Modes
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

With fastn, you don't have to worry about crafting these modes from scratch â€“
they're included out of the box, enhancing both user accessibility and the
aesthetics of your online presence.

-- end: ftd.column

-- end: ftd.row

-- end: ftd.column

-- end: ftd.mobile

-- end: ftd.column

-- end: design-system










-- component seo:

-- ftd.column:
width: fill-container

-- ftd.desktop:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42

-- ftd.text: Search Engine Optimization
role: $inherited.types.heading-large
color: $inherited.colors.text-strong
text-align: center
width: fill-container

-- ds.h2: Custom and Clean URLs

fastn allows you to map documents to any URL you like, allowing you to make all
your URLs clean, and folders organised! You can also create dynamic URLs in
fastn.

-- ds.h2: Optimized Meta Information

Easily manage meta tags and descriptions with fastn. You can fine-tune
how your web pages appear in search engine results and increase your site's
discoverability. You can also add OG-Image to your page and control the
preview of your page link when shared across social platforms.

-- ds.code: Adding meta title, description and image
lang: ftd
copy: false

\-- ds.page: This is page title
document-title: Welcome!
document-description: Learn how to do SEO! document-image: https://gargajit.github.io/optimization/images/seo-meta.png ;; <hl>

-- ds.h2: URL Redirection

Effortlessly create URL redirections to improve navigation and link consistency,
ensuring that your users always find the right content, even when URLs change.

-- ds.code: URL Redirection: `FASTN.ftd` example that uses `fastn.redirects`
lang: ftd
copy: false

\-- import: fastn

\-- fastn.package: redirect-example

\-- fastn.redirects: ;; <hl>

/ftd/kernel/: /kernel/
/discord/: https://discord.gg/eNXVBMa4xt

-- end: ftd.column

-- end: ftd.desktop

-- ftd.mobile:

-- ftd.column:
width: fill-container
spacing.fixed.px: 28
margin-vertical.px: 34

-- ftd.text: Search Engine Optimization
role: $inherited.types.heading-large
color: $inherited.colors.text-strong
text-align: center
width: fill-container

-- ds.h2: Custom and Clean URLs

fastn allows you to map documents to any URL you like, allowing you to make all
your URLs clean, and folders organised! You can also create dynamic URLs in
fastn.

-- ds.h2: Optimized Meta Information

Easily manage meta tags and descriptions with fastn. You can fine-tune
how your web pages appear in search engine results and increase your site's
discoverability. You can also add OG-Image to your page and control the
preview of your page link when shared across social platforms.

-- ds.code: Adding meta title, description and image
lang: ftd
copy: false

\-- ds.page: This is page title
document-title: Welcome!
document-description: Learn how to do SEO! document-image: https://gargajit.github.io/optimization/images/seo-meta.png ;; <hl>

-- ds.h2: URL Redirection

Effortlessly create URL redirections to improve navigation and link consistency,
ensuring that your users always find the right content, even when URLs change.

-- ds.code: URL Redirection: `FASTN.ftd` example that uses `fastn.redirects`
lang: ftd
copy: false

\-- import: fastn

\-- fastn.package: redirect-example

\-- fastn.redirects: ;; <hl>

/ftd/kernel/: /kernel/
/discord/: https://discord.gg/eNXVBMa4xt

-- end: ftd.column

-- end: ftd.mobile

-- end: ftd.column

-- end: seo










-- component visualize-with-vercel:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42
spacing.fixed.px if { ftd.device == "mobile" }: 28
margin-vertical.px if { ftd.device == "mobile" }: 34

-- ftd.column:
width: fill-container
spacing.fixed.px: 16
align-content: center

-- ftd.text: Visualize with Vercel
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.text:
role: $inherited.types.copy-small
color: $inherited.colors.text

Preview and test your website's appearance and functionality before deployment.

-- end: ftd.column

-- ds.image: Preview your page before deployment
src: $fastn-assets.files.compare.vercel.png
width.fixed.percent: 95

-- end: ftd.column

-- end: visualize-with-vercel










-- component fastn-best-choice-for-startup:

-- ftd.column:
width: fill-container
spacing.fixed.px: 48
margin-vertical.px: 42
spacing.fixed.px if { ftd.device == "mobile" }: 28
margin-vertical.px if { ftd.device == "mobile" }: 34
align-content: center

-- ftd.text: Why fastn is the best choice for your startup
role: $inherited.types.heading-large
color: $inherited.colors.text-strong

-- ftd.row:
width: fill-container
spacing.fixed.px: 24
wrap: true

-- ftd.column:
width.fixed.px: 624
min-height.fixed.px: 200
spacing.fixed.px: 16
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Ecosystem Compatibility
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

Unlike traditional languages that often lock you into specific ecosystems, fastn
is versatile and works well with various backend technologies and frameworks.

-- end: ftd.column

-- ftd.column:
width.fixed.px: 624
min-height.fixed.px: 200
spacing.fixed.px: 16
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Architectural Decisions Made for you
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

With fastn, architectural decisions are simplified. We've pre-made many design
choices for you, from color schemes to typography roles, allowing you to focus
on building your project.

-- end: ftd.column

-- ftd.column:
width.fixed.px: 624
min-height.fixed.px: 200
spacing.fixed.px: 16
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Cost-Efficiency
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

fastn enables novice developers to make meaningful contributions. This way, you
can save on hiring and training costs by utilizing a technology that's easy to
learn, helping your startup achieve more with less.

-- end: ftd.column

-- ftd.column:
width.fixed.px: 624
min-height.fixed.px: 200
spacing.fixed.px: 16
border-width.px: 1
padding-vertical.px: 16
padding-horizontal.px: 24
border-radius.px: 8
border-color: $inherited.colors.border
background.solid: $inherited.colors.background.step-1

-- ftd.row:
spacing.fixed.px: 8
align-content: center

-- ftd.image:
src: $fastn-assets.files.compare.tick.svg

-- ftd.text: Stability Guarantee
role: $inherited.types.copy-large
color: $inherited.colors.text-strong
style: semi-bold

-- end: ftd.row

-- ds.markdown:

React, JavaScript often undergo rapid changes which leads to constant relearning
and updates. fastn's stability guarantees a consistent development environment,
saving startups from the constant disruptions of rapidly changing
technologies.

-- end: ftd.column

-- end: ftd.row

-- end: ftd.column

-- end: fastn-best-choice-for-startup