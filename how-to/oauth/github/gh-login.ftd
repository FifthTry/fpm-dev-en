-- import: fastn.dev/assets

-- ds.page: FASTN Login Flow with GitHub

-- ds.markdown:

Once Application has been created then follow below given instructions 

First of All you need to install the `oauth2` crate in `Cargo.toml` file.
Create Oauth2 Basic Client using Github app Client Id and Secret Key . 
Also specify Github Authorization Url and Github Access Token Url as well.

-- ds.code:
lang: ftd

oauth2::basic::BasicClient::new(
           GITHUB_CLIENT_ID.to_owned(),
           Some(GITHUB_CLIENT_SECRET.to_owned()),
           oauth2::AuthUrl::new(AUTHORIZATION_URL.to_string()).unwrap(),
           Some(
               oauth2::TokenUrl::new(ACCESS_TOKEN_URL.to_string())
                   .expect("Invalid token endpoint URL"),
           ),
       )

-- ds.markdown:

After this, call the oauth2 client url method by specifying different scopes.

-- ds.code:
lang: ftd

let (mut authorize_url, _token) = client
       .authorize_url(oauth2::CsrfToken::new_random)
       .add_scope(oauth2::Scope::new("public_repo".to_string()))
       .add_scope(oauth2::Scope::new("user:email".to_string()))
       .add_scope(oauth2::Scope::new("read:org".to_string()))
       .url();

-- ds.markdown:

It will basically call `https://github.com/login/oauth/authorize` url 
for user login and return `code` and `state` as a query parameter to 
the callback url.

To get access tokens we need to call `https://github.com/login/oauth/access_token` . 
We need to pass Client Id,Client Secret and Code(returned after authorization).
In response we will get `access_token` that can be saved in our cookies,
session or database to be used for accessing other Github Apis.

-- end: ds.page