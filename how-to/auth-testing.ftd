-- import: fastn.dev/assets

-- ds.page: Auth Testing

In this article, I am using [abrark.com](https://github.com/abrarnitk/abrark/)
package for `remote` and `local` testing.

-- ds.h1: Local Testing with CLI Parameter `--identities`

For authorization purpose we have to define [user groups](/dev/user-group/)
in `FASTN.ftd`.

-- ds.h2: Define User Group in `FASTN.ftd`

In the below group using `email` as identity.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.user-group: abrark-readers
email: abrark.asahi@gmail.com

-- ds.h2: Use User Group in Sitemap

Use `abrark-readers` in Sitemap with `readers` key.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.sitemap:

# Home: /
readers: abrark-readers

-- ds.h2: Build `fastn` Binary

Clone [`FifthTry/fastn`](https://github.com/fifthtry/fastn) and build it.

-- ds.code:
lang: sh

cargo install --path=.


-- ds.h2: Run `fastn` with CLI Parameter `--identities`

By setting `--identities` as `email: abrark.asahi@gmail.com` we are saying that
at every http request this `email` is the user identity and check the permission
against this user identity.

Run `fastn` with cli parameter `--identities` in your package.

-- ds.code:
lang: sh

fastn serve --port 8000 --identities 'email: abrark.asahi@gmail.com'


-- ds.markdown:

Open `/` in the browser, It will let access to `/` page. If you will change
`email` identity in `FASTN.ftd` to other email and reload page again, so it will
show unauthorized access.


-- ds.h1: Local Testing with Cookie `identities`

-- ds.h2: Define User Group in `FASTN.ftd`

In the below group using `email` as identity.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.user-group: abrark-readers
email: abrark.asahi@gmail.com

-- ds.h2: Use User Group in Sitemap

Use `abrark-readers` in Sitemap with `readers` key.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.sitemap:

# Home: /
readers: abrark-readers


-- ds.h2: Build `fastn` Binary

Clone [`FifthTry/fastn`](https://github.com/fifthtry/fastn) and build it.

-- ds.code:
lang: sh

cargo install --path=.


-- ds.h2: Run `fastn`

Run `fastn` binary in your package.

-- ds.code:
lang: sh

fastn serve --port 8000


-- ds.h2: Set Cookie `identities`

Open browser window with `/` and right click to open `inspect` elements. Go to
`Application` and set cookies for `http://127.0.0.1:8000` to `identities` as
`email: abrark.asahi@gmail.com`. For more than one identities use comma
separated values E.g. `email: abrark.asahi@gmail.com, github: abrarnitk`.

Reload the window after setting the cookie, it will let access the document.

-- ds.image:
src: $assets.files.static.images.auth.github.identities-cookie.png
;;scale: 1
width: fill-container


-- ds.h1: Local Testing with GitHub `sid` Cookie

For testing purpose, I am using [abrark.com](https://github.com/abrarnitk/abrark/)
package. So if you starred [AbrarNitk/abrark](https://github.com/abrarnitk/abrark/)
repository so it should let you access the document otherwise give unauthorized
access.

-- ds.h2: Define User Group in `FASTN.ftd`

In the below group using `github-like` as identity.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.user-group: abrark-readers
github-like: AbrarNitk/abrark

-- ds.h2: Use User Group in Sitemap

Use `abrark-readers` in Sitemap with `readers` key.

-- ds.code: FASTN.ftd
lang: ftd

\-- fastn.sitemap:

# Home: /
readers: abrark-readers

-- ds.h2: OAuth Login with GitHub

Open link `https://abrark.com/-/dj/login/github/` in browser and complete the
OAuth login flow and provide permissions to FifthTry to access your GitHub APIs.

It will redirect to GitHub login page.

-- ds.image: GitHub Login
src: $assets.files.static.images.auth.github.github-login.png
;;scale: 1
width: fill-container

Click on `Sign in`, and complete Two-factor if any.

It will redirect to authorize page.

-- ds.image: GitHub Authorize 5thtry
src: $assets.files.static.images.auth.github.github-authorized-5thtry.png
;;scale: 1
width: fill-container


Click on `Authorize FifthTry`, after that you will be redirected to `abrark.com`.

Check GET API `https://abrark.com/-/dj/get-identities/`, It will give below
response.

-- ds.code:
lang: json

{
    "success": true,
    "user-identities": [{"github": "AbrarNitk"}]
}



-- ds.markdown:

Now copy `sid` cookie from `https://abrark.com/` and paste it in
`http://127.0.0.1:8000` cookie with `sid` key.

Note: Go to `fastn::controller::get_remote_identities` and change `remote_host` in
`fastn`, to `abrark.com`.


-- ds.h2: Build `fastn` with Remote Feature

-- ds.code:
lang: sh

cargo install --path=. --features remote

-- ds.h2: Run `fastn`

Run `fastn` binary in your package.

-- ds.code:
lang: sh

fastn serve --port 8000

-- ds.markdown:

Now go to [AbrarNitk/abrark](https://github.com/abrarnitk/abrark/) repository
and give a star, you should be able access `/` document. If you undo star and
access it again it will give unauthorized access.

Yay!!! Such a magic it is. ðŸ’«

-- end: ds.page