-- import: fpm.dev/assets

-- ft.page: Deploy FPM Package On Heroku

-- ft.h1: 1Ô∏è‚É£ Create FPM Package Repository Using Github Template

-- ft.h2: ‚ñ∂Ô∏è Creating Repository From Template

- On GitHub.com, navigate to the main page of the [fpm-template repository](https://github.com/FifthTry/fpm-template/).
- Above the file list, click `Use this template`.

-- ft.image:
src: $assets.files.static.deploy-on-heroku-1.png
width: fill

- Do the appropriate fill outs in github page and then click `Create repository
from template.`

For more details: Visit [Creating a repository from a template](https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-repository-from-a-template#creating-a-repository-from-a-template)

Note: Wait till the `Rename the project from template` workflow executed successfully.

-- ft.image:
src: $assets.files.static.deploy-on-heroku-3.png
width: fill

-- ft.h1: Deploy on Heroku

The above repository that you have created using `fpm-template`, it should
contain `Deploy to Heroku` button in the project `README` file. By clicking on
this button, you should be landed to `heroku.com`.

-- ft.image:
src: $assets.files.static.deploy-on-heroku-6.png
width: fill


-- ft.markdown:

After click on the `Deploy on Heroku` button you will be landed to below page.
Fill the `App name` which should be unique to heroku apps and click on
`Deploy app`. I have used `fpm-heroku-app` as `App name`.

-- ft.image:
src: $assets.files.static.deploy-on-heroku-7.png
width: fill

After filling the `App name` and clicking on the `Deploy app`, you should see
the below output(build logs) and `Your app was successfully deployed`.

-- ft.image:
src: $assets.files.static.deploy-on-heroku-8.png
width: fill

Now click on `View` button, and your FPM App is ready with heroku.

Yay!!! üíÉ